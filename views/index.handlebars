<div class="row right-add-token" style="float:right">
 <div class="search-box-div"> 
    </div>  
</div>  
<script src="/js/jquery-3.2.1.min.js"></script>
  <div class="table-responsive"> 
    <table class="table table-striped table-sm" id="sampleTable">
        <br>
        <thead>
            <tr  style="text-align:center;">
                <th>Token</th>
                <th>Pair</th>
                <th>Current Price</th>
                <th>Min Price</th>
                <th>Max Price</th>
                <th>Action</th> 
          </tr>
        </thead>
        <tbody  style="text-align:center;">
            
        </tbody> 
    </table>
   </div> 
<script  type="text/javascript">
$(document).ready(function(){   
    GetTokenList();
    setInterval(GetTokenList, 6000); //Set time interval
    function GetTokenList(){
    jQuery.support.cors = true;
    $.ajax(
    { 
        type: "GET",
        url: '/tokenlist',
        data: "{}",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        cache: false,
        success: function (content) {   
         //clear datatable
        $('#sampleTable').DataTable().clear();

        //destroy datatable
        $('#sampleTable').DataTable().destroy();  
        $('#sampleTable').DataTable({         
                                        data:content,
                                        "columns": [
                                                        { data: null , 
                                                            render : function ( data, type, full ) { 
                                                            return data.tokencode +'-'+ data.tokenlist[0].tokenname;}
                                                        },   
                                                        { data: null , 
                                                            render : function ( data, type, full ) { 
                                                            return data.tokencode +'/'+ data.currency;}
                                                        },                             
                                                        { data:"currentvalue"},
                                                        { data: "min"  },
                                                        { data: "max"  },                      
                                                        {
                                                            mRender: function (data, type, row) {
                                                                return '<a href=/edit/'+row._id+'><i class="fa fa-pencil-square-o fa-2x" aria-hidden="true" title="Edit"></i></a>   <a href=/delete/'+row._id+'  ><i class="fa fa-trash fa-2x" aria-hidden="true" title="Delete"></i></a>'
                                                            }
                                                        }                        
                                                    ],
                                    "createdRow": function( nRow, data, dataIndex )
                                    {
                                            $('td', nRow).addClass(data["colorclass"]);            
                                    },
                                    "drawCallback": function( settings ) {
                                                        audioNotification({{user.isMute}}); 
                                                    }
                   
                                    } );       
                },        
                    error: function (msg)
                     {            
                        alert(msg.responseText);
                     }
            });
    }
    
});

</script>
   <script>
        //Search token details base on pair/token
        function myFunction() 
        {
            var input, filter, table, tr, td, i;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("sampleTable");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
            if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
            } else {
            tr[i].style.display = "none";
            }
            }       
            }
            
        }
   </script>
<script src="/admin/vendor/jquery/jquery.min.js"></script>

<script > 
function audioNotification(isMute)
    {      
       
        if(isMute)
        return;       
        var tbRows, table; 
        table = document.getElementById("sampleTable");
        tbRows = table.getElementsByTagName("tr");
        let audioNotificationForGreen = new Audio('./sound/jackpot.mp3');
        let audioNotificationForRed = new Audio('./sound/bell.mp3');
        let interval=1;
        for(let i=1; i < tbRows.length; i++)
            {
              
                    if(tbRows[i].cells[0].className == "black sorting_1")                  
                    {
                    continue;
                    }
                
                if(tbRows[i].cells[0].className == "green sorting_1")
                    {
                    setTimeout(function(){
                    // alert("trdata_green "+(i));
                     audioNotificationForGreen.play();
                        }, 4000 * interval)
                    }
                else if(tbRows[i].cells[0].className == "red sorting_1")
                    {
                    setTimeout(function(){
                     //alert("trdata_red "+(i));
                        audioNotificationForRed.play();
                        }, 4000 * interval)
                    }

                interval++;
            }
    }  


  </script>

<style>

    .green{background-color:green; animation-duration:6000ms; animation-name: blink; animation-iteration-count:infinite; animation-direction: alternate }
    .red{background-color:red; animation-duration: 3000ms; animation-name: blink1; animation-iteration-count:infinite; animation-direction: alternate }
    .trdata{color: white; animation-duration: 2000ms; animation-name: blink3; animation-iteration-count:infinite; animation-direction: alternate }
    .tbcolor{background-color: grey; animation-duration: 2000ms; animation-name: blink4; animation-iteration-count: :infinite; animation-direction: alternate }
    @keyframes blink {
    from { background-color: #2f9e49; }
        to { background-color:#0606065c;}
    }
    @keyframes blink1 {
    from { background-color: red; }
        to { background-color:#0606065c }
    }
</style>